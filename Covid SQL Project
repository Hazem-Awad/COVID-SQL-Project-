# COVID-SQL-Project-

select 
  * 
from 
  PorfolioProject..CovidDeaths$ 
where 
  continent is not null 
order by 
  3, 
  4 
select 
  * 
from 
  PorfolioProject..CovidVaccinations$ 
order by 
  3, 
  4 -- select data that we are going to be using 
select 
  location, 
  date, 
  total_cases, 
  new_cases, 
  total_deaths, 
  population 
from 
  PorfolioProject..CovidDeaths$ 
where 
  continent is not null 
order by 
  1, 
  2 -- looking at total cases vs total deaths
  -- shows likelihood of dying if you contract covid in your country 
select 
  location, 
  date, 
  total_cases, 
  total_deaths, 
  (total_deaths / total_cases)* 100 as DeathPercentage 
from 
  PorfolioProject..CovidDeaths$ 
where 
  location like '%states%' 
  and continent is not null 
order by 
  1, 
  2 -- looking at total cases vs population
  -- shows what percentage of population got covid
select 
  location, 
  date, 
  total_cases, 
  population, 
  (total_cases / population)* 100 as PercentPopulationInfected 
from 
  PorfolioProject..CovidDeaths$ 
where 
  location like '%states%' 
order by 
  1, 
  2 -- Looking at countries with highest infection rate compared to population
select 
  location, 
  population, 
  max(total_cases) as HighestInfectionCount, 
  max(
    (total_cases / Population)
  )* 100 as PercentPopulationInfected 
from 
  PorfolioProject..CovidDeaths$ -- where location like '%states%'
group by 
  location, 
  Population 
order by 
  PercentPopulationInfected desc -- showing countries with highest death count per population
select 
  location, 
  max(
    cast(total_deaths as int)
  ) as TotalDeathCount 
from 
  PorfolioProject..CovidDeaths$ -- where location like '%states%'
where 
  continent is not null 
group by 
  location 
order by 
  TotalDeathCount desc -- let's break things down by continent
select 
  continent, 
  max(
    cast(total_deaths as int)
  ) as TotalDeathCount 
from 
  PorfolioProject..CovidDeaths$ -- where location like '%states%'
where 
  continent is not null 
group by 
  continent 
order by 
  TotalDeathCount desc --showing continents with the highest death count per population
select 
  continent, 
  max(
    cast(total_deaths as int)
  ) as TotalDeathCount 
from 
  PorfolioProject..CovidDeaths$ -- where location like '%states%'
where 
  continent is not null 
group by 
  continent 
order by 
  TotalDeathCount desc -- Global Numbers
select 
  sum(new_cases) as total_cases, 
  sum(
    cast(total_deaths as int)
  ) as total_death, 
  sum(
    cast(New_deaths as int)
  )/ sum(New_cases) * 100 as DeathPercentage 
from 
  PorfolioProject..CovidDeaths$ 
where 
  continent is not null --group by date
order by 
  1, 
  2 -- looking at total population vs vaccinations
  -- Shows Percentage of Population that has recieved at least one Covid Vaccine
select 
  dea.continent, 
  dea.location, 
  dea.date, 
  dea.population, 
  vac.new_vaccinations, 
  SUM(
    CONVERT(int, vac.new_vaccinations)
  ) over (
    partition by dea.location 
    order by 
      dea.location, 
      dea.date
  ) as RollingPeopleVaccinated --,(RollingPeopleVaccinated/population)*100
from 
  PorfolioProject..CovidDeaths$ dea 
  join PorfolioProject..CovidVaccinations$ vac on dea.location = vac.location 
  and dea.date = vac.date 
where 
  dea.continent is not null 
order by 
  2, 
  3 -- Using CTE to perform Calculation on Partition By in previous query
  with PopvsVac (
    continent, location, date, population, 
    new_vaccinations, RollingPeopleVaccinated
  ) as (
    select 
      dea.continent, 
      dea.location, 
      dea.date, 
      dea.population, 
      vac.new_vaccinations, 
      SUM(
        CONVERT(int, vac.new_vaccinations)
      ) over (
        partition by dea.location 
        order by 
          dea.location, 
          dea.date
      ) as RollingPeopleVaccinated --,(RollingPeopleVaccinated/population)*100
    from 
      PorfolioProject..CovidDeaths$ dea 
      join PorfolioProject..CovidVaccinations$ vac on dea.location = vac.location 
      and dea.date = vac.date 
    where 
      dea.continent is not null --order by 2,3
      ) 
select 
  *, 
  (
    RollingPeopleVaccinated / population
  )* 100 
from 
  PopvsVac -- Using Temp Table to perform Calculation on Partition By in previous query
DROP 
  Table if exists #PercentPopulationVaccinated
  Create Table #PercentPopulationVaccinated
  (
    Continent nvarchar(255), 
    Location nvarchar(255), 
    Date datetime, 
    Population numeric, 
    New_vaccinations numeric, 
    RollingPeopleVaccinated numeric
  ) Insert into #PercentPopulationVaccinated
Select 
  dea.continent, 
  dea.location, 
  dea.date, 
  dea.population, 
  vac.new_vaccinations, 
  SUM(
    CONVERT(int, vac.new_vaccinations)
  ) OVER (
    Partition by dea.Location 
    Order by 
      dea.location, 
      dea.Date
  ) as RollingPeopleVaccinated --, (RollingPeopleVaccinated/population)*100
From 
  PorfolioProject..CovidDeaths$ dea 
  Join PorfolioProject..CovidVaccinations$ vac On dea.location = vac.location 
  and dea.date = vac.date --where dea.continent is not null 
  --order by 2,3
Select 
  *, 
  (
    RollingPeopleVaccinated / Population
  )* 100 
From 
  #PercentPopulationVaccinated
  -- Creating View to store data for later visualizations
  Create View PercentPopulationVaccinated as 
Select 
  dea.continent, 
  dea.location, 
  dea.date, 
  dea.population, 
  vac.new_vaccinations, 
  SUM(
    CONVERT(int, vac.new_vaccinations)
  ) OVER (
    Partition by dea.Location 
    Order by 
      dea.location, 
      dea.Date
  ) as RollingPeopleVaccinated --, (RollingPeopleVaccinated/population)*100
From 
  PorfolioProject..CovidDeaths$ dea 
  Join PorfolioProject..CovidVaccinations$ vac On dea.location = vac.location 
  and dea.date = vac.date 
where 
  dea.continent is not null - Creating View to store data for later visualizations Create View PercentPopulationVaccinated as 
Select 
  dea.continent, 
  dea.location, 
  dea.date, 
  dea.population, 
  vac.new_vaccinations, 
  SUM(
    CONVERT(int, vac.new_vaccinations)
  ) OVER (
    Partition by dea.Location 
    Order by 
      dea.location, 
      dea.Date
  ) as RollingPeopleVaccinated --, (RollingPeopleVaccinated/population)*100
From 
  PorfolioProject..CovidDeaths$ dea 
  Join PorfolioProject..CovidVaccinations$ vac On dea.location = vac.location 
  and dea.date = vac.date 
where 
  dea.continent is not null --order by 2,3
select 
  * 
from 
  PercentPopulationVaccinated -------------------------------------------------------------------
  --Queries used for Tableau Project
  --1
Select 
  SUM(new_cases) as total_cases, 
  SUM(
    cast(new_deaths as int)
  ) as total_deaths, 
  SUM(
    cast(new_deaths as int)
  )/ SUM(New_Cases)* 100 as DeathPercentage 
From 
  PorfolioProject..CovidDeaths$ --Where location like '%states%'
where 
  continent is not null --Group By date
order by 
  1, 
  2 -- Just a double check based off the data provided
  -- numbers are extremely close so we will keep them - The Second includes "International"  Location
  --Select SUM(new_cases) as total_cases, SUM(cast(new_deaths as int)) as total_deaths, SUM(cast(new_deaths as int))/SUM(New_Cases)*100 as DeathPercentage
  --From PortfolioProject..CovidDeaths
  ----Where location like '%states%'
  --where location = 'World'
  ----Group By date
  --order by 1,2
  -2.-- We take these out as they are not inluded in the above queries and want to stay consistent
  -- European Union is part of Europe
Select 
  location, 
  SUM(
    cast(new_deaths as int)
  ) as TotalDeathCount 
From 
  PorfolioProject..CovidDeaths$ --Where location like '%states%'
Where 
  continent is null 
  and location not in (
    'World', 'European Union', 'International'
  ) 
Group by 
  location 
order by 
  TotalDeathCount desc -- 3.
Select 
  Location, 
  Population, 
  MAX(total_cases) as HighestInfectionCount, 
  Max(
    (total_cases / population)
  )* 100 as PercentPopulationInfected 
From 
  PorfolioProject..CovidDeaths$ --Where location like '%states%'
Group by 
  Location, 
  Population 
order by 
  PercentPopulationInfected desc -- 4.
Select 
  Location, 
  Population, 
  date, 
  MAX(total_cases) as HighestInfectionCount, 
  Max(
    (total_cases / population)
  )* 100 as PercentPopulationInfected 
From 
  PorfolioProject..CovidDeaths$ --Where location like '%states%'
Group by 
  Location, 
  Population, 
  date 
order by 
  PercentPopulationInfected desc
